
module testbench();
	logic clk, reset;
	logic [3:0] Flags;
	logic [3:0] ALUControl;
	logic [25:0] testvectors [3:0]; // first is length, second is number of vecs
	logic [3:0] vectornum;
	logic [31:0]  errors, Result, a,b, expectedResult;
	
	//device under test
	lab5_tb dut(a ,b, ALUControl,Result, Flags);
	
	// generate clock
	always
	begin
		clk = 1; #5; clk = 0; #5;
	end
	
	// load vectors at the start and reset
	initial
	begin
		$readmemb("example.tv", testvectors);
		vectornum = 0; errors = 0;
		reset = 1; #27; reset = 0;
	end
	
	always @(posedge clk)
	begin
		#1; {ALUControl, a, b,expectedResult,Flags} = testvectors[vectornum];
	end

	// check results on falling edge
	always @(negedge clk)
	if (~reset) begin 
		if (Result != expectedResult)begin 
			$display("Error: inputs = %b", {a,b,ALUControl});
			$display("	outputs = %b (%b expected)",Result,expectedResult);
			errors = errors + 1;
		end

		// increment and read next vector
		vectornum = vectornum + 1;
		if (testvectors[vectornum] === 26'hx) begin
			$display("%d tests completed with %d errors", vectornum, errors);
			$finish;
		end
	end
endmodule
